openapi: 3.0.3
info:
  title: Comuniapp API
  description: API para la aplicación de comunidades
  version: 0.0.1
  contact:
    name: Equipo Comuniapp
    email: dev@comuniapp.com
servers:
  - url: http://localhost:3001
    description: Servidor de desarrollo
  - url: https://api.comuniapp.com
    description: Servidor de producción
paths:
  /health:
    get:
      tags:
        - Health
      summary: Verificar el estado de la API
      description: Endpoint para verificar que la API está funcionando correctamente
      responses:
        '200':
          description: API funcionando correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"
                  timestamp:
                    type: string
                    format: date-time
                  uptime:
                    type: number
                    description: Tiempo de actividad en segundos
  /users:
    get:
      tags:
        - Users
      summary: Obtener todos los usuarios
      description: Retorna una lista de todos los usuarios registrados
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
        - Users
      summary: Crear un nuevo usuario
      description: Crea un nuevo usuario en el sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: Usuario creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Datos de entrada inválidos
        '409':
          description: El email ya está registrado
  /common-expenses:
    post:
      tags:
        - Common Expenses
      summary: Crear un nuevo ciclo de facturación de gastos comunes
      description: Crea un nuevo ciclo de facturación mensual para una comunidad con prorrateo automático
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCommonExpenseRequest'
      responses:
        '201':
          description: Gasto común creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonExpenseResponse'
        '400':
          description: Datos de entrada inválidos
        '403':
          description: Sin permisos para gestionar esta comunidad
        '409':
          description: Ya existe un gasto común para este período
    get:
      tags:
        - Common Expenses
      summary: Listar ciclos de facturación de una comunidad
      description: Obtiene todos los ciclos de facturación de gastos comunes de una comunidad específica
      security:
        - bearerAuth: []
      parameters:
        - name: communityId
          in: query
          required: true
          schema:
            type: string
          description: ID de la comunidad
      responses:
        '200':
          description: Lista de gastos comunes obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommonExpenseSummary'
        '400':
          description: communityId es requerido
        '403':
          description: Sin permisos para acceder a esta información
  /common-expenses/{id}:
    get:
      tags:
        - Common Expenses
      summary: Obtener detalles de un ciclo de facturación
      description: Obtiene los detalles completos de un ciclo de facturación específico
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del gasto común
      responses:
        '200':
          description: Detalles del gasto común obtenidos exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonExpenseResponse'
        '404':
          description: Gasto común no encontrado
        '403':
          description: Sin permisos para acceder a esta información
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          description: Identificador único del usuario
          example: "clh1234567890abcdef"
        email:
          type: string
          format: email
          description: Email del usuario
          example: "usuario@ejemplo.com"
        name:
          type: string
          nullable: true
          description: Nombre del usuario
          example: "Juan Pérez"
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización
      required:
        - id
        - email
        - createdAt
        - updatedAt
    CreateUserRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Email del usuario
          example: "usuario@ejemplo.com"
        name:
          type: string
          nullable: true
          description: Nombre del usuario
          example: "Juan Pérez"
      required:
        - email
    CreateCommonExpenseRequest:
      type: object
      properties:
        communityId:
          type: string
          description: ID de la comunidad
          example: "clh1234567890abcdef"
        period:
          type: string
          pattern: '^\d{4}-\d{2}$'
          description: Período en formato YYYY-MM
          example: "2024-01"
        dueDate:
          type: string
          format: date-time
          description: Fecha de vencimiento
          example: "2024-01-31T23:59:59Z"
        items:
          type: array
          items:
            $ref: '#/components/schemas/CommonExpenseItemRequest'
          description: Lista de ítems del gasto común
        prorrateMethod:
          $ref: '#/components/schemas/ProrrateMethod'
      required:
        - communityId
        - period
        - dueDate
        - items
        - prorrateMethod
    CommonExpenseItemRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
          description: Nombre del ítem
          example: "Mantenimiento ascensor"
        amount:
          type: number
          format: decimal
          minimum: 0.01
          description: Monto del ítem
          example: 1500.00
        description:
          type: string
          maxLength: 500
          nullable: true
          description: Descripción opcional del ítem
          example: "Mantenimiento mensual del ascensor principal"
      required:
        - name
        - amount
    CommonExpenseResponse:
      type: object
      properties:
        id:
          type: string
          description: Identificador único del gasto común
          example: "clh1234567890abcdef"
        communityId:
          type: string
          description: ID de la comunidad
          example: "clh1234567890abcdef"
        communityName:
          type: string
          description: Nombre de la comunidad
          example: "Residencial Los Pinos"
        period:
          type: string
          description: Período en formato YYYY-MM
          example: "2024-01"
        totalAmount:
          type: number
          format: decimal
          description: Monto total del gasto común
          example: 15000.00
        dueDate:
          type: string
          format: date-time
          description: Fecha de vencimiento
        prorrateMethod:
          $ref: '#/components/schemas/ProrrateMethod'
        items:
          type: array
          items:
            $ref: '#/components/schemas/CommonExpenseItemResponse'
        unitExpenses:
          type: array
          items:
            $ref: '#/components/schemas/UnitExpenseResponse'
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización
      required:
        - id
        - communityId
        - communityName
        - period
        - totalAmount
        - dueDate
        - prorrateMethod
        - items
        - unitExpenses
        - createdAt
        - updatedAt
    CommonExpenseItemResponse:
      type: object
      properties:
        id:
          type: string
          description: Identificador único del ítem
          example: "clh1234567890abcdef"
        name:
          type: string
          description: Nombre del ítem
          example: "Mantenimiento ascensor"
        amount:
          type: number
          format: decimal
          description: Monto del ítem
          example: 1500.00
        description:
          type: string
          nullable: true
          description: Descripción del ítem
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización
      required:
        - id
        - name
        - amount
        - createdAt
        - updatedAt
    UnitExpenseResponse:
      type: object
      properties:
        id:
          type: string
          description: Identificador único del gasto de unidad
          example: "clh1234567890abcdef"
        unitId:
          type: string
          description: ID de la unidad
          example: "clh1234567890abcdef"
        unitNumber:
          type: string
          description: Número de la unidad
          example: "101"
        amount:
          type: number
          format: decimal
          description: Monto prorrateado para esta unidad
          example: 500.00
        concept:
          type: string
          description: Concepto del gasto
          example: "Gastos Comunes 2024-01"
        description:
          type: string
          nullable: true
          description: Descripción del gasto
        dueDate:
          type: string
          format: date-time
          description: Fecha de vencimiento
        status:
          $ref: '#/components/schemas/ExpenseStatus'
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización
      required:
        - id
        - unitId
        - unitNumber
        - amount
        - concept
        - dueDate
        - status
        - createdAt
        - updatedAt
    CommonExpenseSummary:
      type: object
      properties:
        id:
          type: string
          description: Identificador único del gasto común
          example: "clh1234567890abcdef"
        communityId:
          type: string
          description: ID de la comunidad
          example: "clh1234567890abcdef"
        communityName:
          type: string
          description: Nombre de la comunidad
          example: "Residencial Los Pinos"
        period:
          type: string
          description: Período en formato YYYY-MM
          example: "2024-01"
        totalAmount:
          type: number
          format: decimal
          description: Monto total del gasto común
          example: 15000.00
        dueDate:
          type: string
          format: date-time
          description: Fecha de vencimiento
        totalUnits:
          type: integer
          description: Total de unidades en la comunidad
          example: 30
        paidUnits:
          type: integer
          description: Unidades que han pagado
          example: 25
        pendingUnits:
          type: integer
          description: Unidades con pagos pendientes
          example: 3
        overdueUnits:
          type: integer
          description: Unidades con pagos vencidos
          example: 2
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación
      required:
        - id
        - communityId
        - communityName
        - period
        - totalAmount
        - dueDate
        - totalUnits
        - paidUnits
        - pendingUnits
        - overdueUnits
        - createdAt
    ProrrateMethod:
      type: string
      enum:
        - EQUAL
        - COEFFICIENT
      description: Método de prorrateo de gastos comunes
      example: "EQUAL"
    ExpenseStatus:
      type: string
      enum:
        - PENDING
        - PAID
        - OVERDUE
        - CANCELLED
      description: Estado del gasto
      example: "PENDING"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
